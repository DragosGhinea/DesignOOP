version: '3'

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
    ports:
      - "8900:80"
    volumes: 
      - ./nginx:/etc/nginx/conf.d/

  postgres:
    image: postgres
    container_name: designoop-postgres
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./prod-env/postgres.env

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    expose:
      - "80"
    env_file:
      - ./prod-env/pgadmin.env

  users-module:
    image: designoop-users-module
    container_name: designoop-users-module
    depends_on:
      - postgres
    build:
      context: ./backend/users-module
    expose:
      - "8083"
    env_file:
      - ./prod-env/users-module.env


  mongodb:
    image: mongo:latest
    container_name: designoop-mongodb
    expose:
      - "27017"
    volumes:
      - mongodb_data:/data/db
    env_file:
      - ./prod-env/mongodb.env

  mongo-express:
    image: mongo-express
    container_name: designoop-mongo-express
    expose:
      - "8081"
    ports:
      - "8888:8081"
    depends_on:
      - mongodb
    env_file:
      - ./prod-env/mongo-express.env

  courses-module:
    image: designoop-courses-module
    container_name: designoop-courses-module
    depends_on:
      - mongodb
    build:
      context: ./backend/courses-module
    expose:
      - "8081"
    env_file:
      - ./prod-env/courses-module.env

  frontend: #nextjs
    container_name: designoop-frontend
    build:
      context: ./frontend
    env_file:
      - ./prod-env/frontend.env
    image: designoop-frontend
    depends_on:
      - users-module
      - courses-module
    expose:
      - "3000"

volumes:
  mongodb_data: {}
  postgres_data: {}